<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <description>Creates a recurring type of gift commitment schedule record and stores it in RecurringGiftCmtScheduleRequest.</description>
        <name>CreateRecurringGiftCmtSchdRecord</name>
        <label>Create Recurring Gift Commitment Schedule Record</label>
        <locationX>2202</locationX>
        <locationY>1106</locationY>
        <actionName>manageRcrGiftCmtSchd</actionName>
        <actionType>manageRcrGiftCmtSchd</actionType>
        <faultConnector>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>giftCommitmentSchedule</name>
            <value>
                <elementReference>RecurringGiftCmtScheduleRequest</elementReference>
            </value>
        </inputParameters>
        <nameSegment>manageRcrGiftCmtSchd</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls Process Gift Commitment Invocable action after deletion of custom gift commitment schedules and gift transactions.</description>
        <name>ProcessGiftCommitment</name>
        <label>Process Gift Commitment</label>
        <locationX>3522</locationX>
        <locationY>1430</locationY>
        <actionName>processGiftCommitment</actionName>
        <actionType>processGiftCommitment</actionType>
        <faultConnector>
            <targetReference>RollBackFailedGiftTransactions</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>giftCommitmentId</name>
            <value>
                <elementReference>giftCommitmentId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>processGiftCommitment</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Creates custom type of gift commitment schedule record by taking the data given by the flow user in the CustomGiftCommitmentScheduleComponent.</description>
        <name>UpsertCustomGiftCmtSchd</name>
        <label>Upsert Custom Gift Commitment Schedule</label>
        <locationX>2862</locationX>
        <locationY>1214</locationY>
        <actionName>manageCustomGiftCmtSchds</actionName>
        <actionType>manageCustomGiftCmtSchds</actionType>
        <connector>
            <targetReference>HasCustomSchedulesToDelete</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>giftCommitmentSchedules</name>
            <value>
                <elementReference>CustomGiftCommitmentScheduleComponent.customGiftCommitmentScheduleInfo</elementReference>
            </value>
        </inputParameters>
        <nameSegment>manageCustomGiftCmtSchds</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <description>Adds the ID of the current gift commitment record to giftCommitmentId.</description>
        <name>AddIdToCollectionLoop</name>
        <label>Add ID to Collection</label>
        <locationX>490</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>giftCommitmentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateOverGiftCommitments.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverGiftCommitments</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets isError to True and errorCode to InvalidCmtErrorCode.</description>
        <name>SetErrorVariablesInvalidGiftCommitmentId</name>
        <label>Set Error Variables</label>
        <locationX>1146</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>InvalidCmtErrorCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayErrorManageScheduleScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets isError to True and errorCode to InvalidRecordIdErrorCode.</description>
        <name>SetErrorVariablesInvalidRecordId</name>
        <label>Set Error Variables</label>
        <locationX>5634</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>InvalidRecordIdErrorCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayErrorManageScheduleScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets donorHasNoCommitmentError to True.</description>
        <name>SetErrorVariablesNoGiftCommitments</name>
        <label>Set Error Variables</label>
        <locationX>50</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>donorHasNoCommitmentError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>DisplayErrorManageScheduleScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets SetErrorVariablesNoneScheduleType to True and errorCode to noneScheduleTypeErrorCode.</description>
        <name>SetErrorVariablesNoneScheduleType</name>
        <label>Set Error Variables</label>
        <locationX>1410</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>noneScheduleTypeErrorCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayErrorManageScheduleScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets isPausedGiftComitSchdError to True.</description>
        <name>SetErrorVariablesPausedGiftComitSchd</name>
        <label>Set Error Variables</label>
        <locationX>1938</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>isPausedGiftComitSchdError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayErrorManageScheduleScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets isError to True and errorCode to unchangedCustomScheduleErrorCode.</description>
        <name>SetErrorVariablesUnchangedCustomGiftCmtSchdError</name>
        <label>Set Error Variables</label>
        <locationX>4578</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>unchangedCustomScheduleErrorCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayErrorManageScheduleScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets new fields for a custom gift commitment schedule in CustomGiftCmtSchdFields by taking values from the flow user.</description>
        <name>SetFieldsForCustomGiftCmtSchd</name>
        <label>Set Fields for Custom Gift Commitment Schedule</label>
        <locationX>3720</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>CustomGiftCmtSchdFields</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>CampaignId</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CollectCustomGiftComitSchdDetailsScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets CommitmentCount to the number of records in GiftCommitments from GetGiftCommitments.</description>
        <name>SetGiftCommitmentCount</name>
        <label>Set Gift Commitment Count</label>
        <locationX>334</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>gIftCommitmentCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>GetGiftCommitments</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HaveGiftCommitments</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets giftCommitmentId to recordId.</description>
        <name>SetGiftCommitmentId</name>
        <label>Set Gift Commitment ID</label>
        <locationX>1921</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>giftCommitmentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetGiftCmtFromGiftCommitmentId</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the gift commitment schedule values for RecurringGiftCmtScheduleRequest to the values that the user selected in CollectRecurringGiftComitSchdDetailsScreen</description>
        <name>SetRecurringGiftCmtScdValuesforGiftCmt</name>
        <label>Set Recurring Gift Commitment Schedule Values</label>
        <locationX>2202</locationX>
        <locationY>998</locationY>
        <assignmentItems>
            <assignToReference>RecurringGiftCmtScheduleRequest.TransactionPeriod</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GiftTransactionPeriodPicklist</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCmtScheduleRequest.TransactionInterval</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GiftTransactionInterval</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCmtScheduleRequest.TransactionAmount</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GiftTransactionAmount</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCmtScheduleRequest.TransactionDay</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GiftTransactionDayPicklist</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCmtScheduleRequest.CampaignId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CampaignLookup.recordId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCmtScheduleRequest.StartDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StartDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCmtScheduleRequest.EndDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EndDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCmtScheduleRequest.GiftCommitmentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetGiftCmtFromGiftCommitmentId.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateRecurringGiftCmtSchdRecord</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets giftCommitmentId to the first gift commitment record in GiftCommitments.</description>
        <name>SetSelectedGiftCmtId</name>
        <label>Set Selected Gift Commitment ID</label>
        <locationX>618</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>giftCommitmentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SelectGiftCommitmentDataTable.firstSelectedRow.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>GetGiftCmtFromGiftCommitmentId</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>Stores the ID prefix for an account record.</description>
        <name>AccountIdPrefix</name>
        <dataType>String</dataType>
        <value>
            <stringValue>001</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the ID prefix for a gift commitment record.</description>
        <name>GiftCommitmentIdPrefix</name>
        <dataType>String</dataType>
        <value>
            <stringValue>6gc</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the action to upgrade downgrade of a recurring gift commitment schedule.</description>
        <name>UpgradeDowngradeAction</name>
        <dataType>String</dataType>
        <value>
            <stringValue>UpgradeDowngrade</stringValue>
        </value>
    </constants>
    <decisions>
        <description>Determines whether the data in CustomGiftCommitmentScheduleComponent includes any custom schedules to be deleted.</description>
        <name>HasCustomSchedulesToDelete</name>
        <label>Has Custom Schedules to Delete?</label>
        <locationX>2862</locationX>
        <locationY>1322</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>IsDeleteCustomScheduleIds</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CustomGiftCommitmentScheduleComponent.deletedGiftCommitmentScheduleIdList</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>DeleteGiftCmtTransactions</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether giftCommitmentCount or GiftCommitments from GetGiftCommitments is greater than 0.</description>
        <name>HaveGiftCommitments</name>
        <label>Have Gift Commitments?</label>
        <locationX>334</locationX>
        <locationY>458</locationY>
        <defaultConnector>
            <targetReference>SelectGiftCmtScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>More Than One Commitment</defaultConnectorLabel>
        <rules>
            <name>HasNoGiftCommitments</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>gIftCommitmentCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetGiftCommitments</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetErrorVariablesNoGiftCommitments</targetReference>
            </connector>
            <label>No Commitment</label>
        </rules>
        <rules>
            <name>HasOneGiftCommitment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>gIftCommitmentCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IterateOverGiftCommitments</targetReference>
            </connector>
            <label>One Commitment</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the flow user provided new custom type of gift commitment schedule details, deleted data from a custom schedule or changed no data.</description>
        <name>IsCreateUpdateCustomGiftCmtSchd</name>
        <label>Is Create or Update Custom Gift Commitment Schedule?</label>
        <locationX>3720</locationX>
        <locationY>1106</locationY>
        <defaultConnector>
            <targetReference>SetErrorVariablesUnchangedCustomGiftCmtSchdError</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>IsCreateOrDelete</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CustomGiftCommitmentScheduleComponent.customGiftCommitmentScheduleInfo</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpsertCustomGiftCmtSchd</targetReference>
            </connector>
            <label>Create Custom Schedule</label>
        </rules>
        <rules>
            <name>IsDeleteOnly</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CustomGiftCommitmentScheduleComponent.deletedGiftCommitmentScheduleIdList</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteGiftCmtTransactions</targetReference>
            </connector>
            <label>Only Delete Custom Schedule</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether a gift commitment record exists for that giftCommitmentId and whether its schedule type is None.</description>
        <name>IsGiftCmtValid</name>
        <label>Is Gift Commitment Valid?</label>
        <locationX>1921</locationX>
        <locationY>458</locationY>
        <defaultConnector>
            <targetReference>GetGiftComitSchedules</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>IsInvalidGiftCommitment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetErrorVariablesInvalidGiftCommitmentId</targetReference>
            </connector>
            <label>No</label>
        </rules>
        <rules>
            <name>HasNoneScheduleType</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId.ScheduleType</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetErrorVariablesNoneScheduleType</targetReference>
            </connector>
            <label>Has None Schedule Type</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the gift commitment schedules for the giftCommitmentId are of recurring or custom type, or whether they are paused schedules of recurring type.</description>
        <name>WhatTypeOfGiftComitSchdExist</name>
        <label>What Type of Gift Commitment Schedules Exist?</label>
        <locationX>2697</locationX>
        <locationY>782</locationY>
        <defaultConnector>
            <targetReference>SetFieldsForCustomGiftCmtSchd</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is Custom Gift Commitment Schedule</defaultConnectorLabel>
        <rules>
            <name>IsRecurringGiftCmtSchd</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetGiftComitSchedules</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId.ScheduleType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Recurring</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Recurring_Gift_Commitment_Schedule_FinDock</targetReference>
            </connector>
            <label>Is Recurring Gift Commitment Schedule</label>
        </rules>
        <rules>
            <name>IsPausedRecurringGiftCmtSchd</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetPausedGiftComitSchedules</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId.ScheduleType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Recurring</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetErrorVariablesPausedGiftComitSchd</targetReference>
            </connector>
            <label>Is Paused Recurring Gift Commitment Schedule</label>
        </rules>
        <rules>
            <name>HasNoRecurringGiftCmtSchd</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetGiftComitSchedules</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId.ScheduleType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Recurring</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CollectRecurringGiftComitSchdDetailsScreen</targetReference>
            </connector>
            <label>No Gift Commitment Schedule of Recurring Type</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the record ID that&apos;s passed into the flow is a donor, gift commitment, or other type of ID.</description>
        <name>WhatTypeOfId</name>
        <label>What type of ID?</label>
        <locationX>2984</locationX>
        <locationY>134</locationY>
        <defaultConnector>
            <targetReference>SetErrorVariablesInvalidRecordId</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other (Default)</defaultConnectorLabel>
        <rules>
            <name>IsDonorId</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>AccountIdPrefix</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetGiftCommitments</targetReference>
            </connector>
            <label>Donor</label>
        </rules>
        <rules>
            <name>IsGiftCommitmentId</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>GiftCommitmentIdPrefix</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetGiftCommitmentId</targetReference>
            </connector>
            <label>Gift Commitment</label>
        </rules>
    </decisions>
    <description>Manage Gift Commitment Schedules</description>
    <dynamicChoiceSets>
        <description>Stores all the payment methods for the gift transactions associated with the gift commitment object to use as options for PaymentMethodPicklist on CollectRecurringGiftComitSchdDetailsScreen.</description>
        <name>PaymentMethodPicklistChoiceSet</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>PaymentMethod</picklistField>
        <picklistObject>GiftCommitmentSchedule</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <description>Stores numbers to denote the days of a month for a monthly transaction period for a gift commitment schedule object to use as options for GiftTransactionDayPicklist on CollectRecurringGiftComitSchdDetailsScreen.</description>
        <name>TransactionDayPicklistChoiceSet</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>TransactionDay</picklistField>
        <picklistObject>GiftCommitmentSchedule</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <description>Stores all the transaction period values for a gift commitment schedule object to use as options for GiftTransactionPeriodPicklist on CollectRecurringGiftComitSchdDetailsScreen.</description>
        <name>TransactionPeriodPicklistChoiceSet</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>TransactionPeriod</picklistField>
        <picklistObject>GiftCommitmentSchedule</picklistObject>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <description>Returns true if EndDate is on or after the StartDate, else returns false.</description>
        <name>ValidateEndDateFormula</name>
        <dataType>Boolean</dataType>
        <expression>IF(({!StartDate}&gt;{!EndDate}), false, true)</expression>
    </formulas>
    <formulas>
        <description>Returns true if GiftTransactionAmount is greater than equal to one, else returns false.</description>
        <name>ValidateGiftTransactionAmountFormula</name>
        <dataType>Boolean</dataType>
        <expression>IF(({!GiftTransactionAmount})&lt;1, false, true)</expression>
    </formulas>
    <interviewLabel>Manage Gift Commitment Schedules {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Manage Gift Commitment Schedules</label>
    <loops>
        <description>Repeats actions in a loop for each gift commitment record in GiftCommitments from GetGiftCommitments.</description>
        <name>IterateOverGiftCommitments</name>
        <label>Iterate Over Gift Commitments</label>
        <locationX>402</locationX>
        <locationY>566</locationY>
        <collectionReference>GetGiftCommitments</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AddIdToCollectionLoop</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <isGoTo>true</isGoTo>
            <targetReference>GetGiftCmtFromGiftCommitmentId</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordDeletes>
        <description>Delete the custom gift commitment schedules after deleting the associated gift transactions for the schedules that are specified for deletion in CustomGiftCommitmentScheduleComponent.</description>
        <name>DeleteCustomGiftCmtSchd</name>
        <label>Delete Custom Gift Commitment Schedules</label>
        <locationX>3522</locationX>
        <locationY>1322</locationY>
        <connector>
            <targetReference>ProcessGiftCommitment</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>RollBackFailedGiftTransactions</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>CustomGiftCommitmentScheduleComponent.deletedGiftCommitmentScheduleIdList</elementReference>
            </value>
        </filters>
        <object>GiftCommitmentSchedule</object>
    </recordDeletes>
    <recordDeletes>
        <description>Deletes gift commitment transaction records for the custom schedules that are specified for deletion in CustomGiftCommitmentScheduleComponent.</description>
        <name>DeleteGiftCmtTransactions</name>
        <label>Delete Gift Commitment Transactions</label>
        <locationX>3522</locationX>
        <locationY>1214</locationY>
        <connector>
            <targetReference>DeleteCustomGiftCmtSchd</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DeleteCustomGiftCmtSchd</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GiftCommitmentScheduleId</field>
            <operator>In</operator>
            <value>
                <elementReference>CustomGiftCommitmentScheduleComponent.deletedGiftCommitmentScheduleIdList</elementReference>
            </value>
        </filters>
        <object>GiftTransaction</object>
    </recordDeletes>
    <recordLookups>
        <description>Gets the gift commitment record with an ID matching giftCommitmentId.</description>
        <name>GetGiftCmtFromGiftCommitmentId</name>
        <label>Get Gift Commitment</label>
        <locationX>1921</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsGiftCmtValid</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <filterLogic>1 AND (2 OR 3 OR 4)</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>giftCommitmentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Draft</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Paused</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GiftCommitment</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets ongoing and future gift commitment schedule records for giftCommitmentId that has type as  CreateTransactions.</description>
        <name>GetGiftComitSchedules</name>
        <label>Get Gift Commitment Schedules</label>
        <locationX>2697</locationX>
        <locationY>566</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetPausedGiftComitSchedules</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <filterLogic>1 AND (2 OR 3) AND 4</filterLogic>
        <filters>
            <field>GiftCommitmentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>giftCommitmentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CreateTransactions</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GiftCommitmentSchedule</object>
        <sortField>StartDate</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets active, draft, and paused gift commitment records with a donor ID that matches recordId. Stores the results in the GiftCommitments from GetGiftCommitments record collection.</description>
        <name>GetGiftCommitments</name>
        <label>Get Gift Commitments</label>
        <locationX>334</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SetGiftCommitmentCount</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <filterLogic>1 AND (2 OR 3 OR 4) AND 5</filterLogic>
        <filters>
            <field>DonorId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Draft</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Paused</stringValue>
            </value>
        </filters>
        <filters>
            <field>ScheduleType</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GiftCommitment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets gift commitment schedule records for giftCommitmentId with type as PauseTransactions.</description>
        <name>GetPausedGiftComitSchedules</name>
        <label>Get Paused Gift Commitment Schedules</label>
        <locationX>2697</locationX>
        <locationY>674</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>WhatTypeOfGiftComitSchdExist</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <filterLogic>1 AND (2 OR 3) AND 4</filterLogic>
        <filters>
            <field>GiftCommitmentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>giftCommitmentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PauseTransactions</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GiftCommitmentSchedule</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordRollbacks>
        <description>Undoes all deleted gift transaction records when the deletion of the custom gift commitment schedule fails.</description>
        <name>RollBackFailedGiftTransactions</name>
        <label>Roll Back Failed Gift Transactions</label>
        <locationX>3786</locationX>
        <locationY>1538</locationY>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </connector>
    </recordRollbacks>
    <screens>
        <description>Allows the flow user to create a custom gift commitment schedule when gift commitment schedules with custom schedule type were found for the gift commitment with giftCommitmentId.</description>
        <name>CollectCustomGiftComitSchdDetailsScreen</name>
        <label>Collect Custom Gift Commitment Schedule Details</label>
        <locationX>3720</locationX>
        <locationY>998</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>IsCreateUpdateCustomGiftCmtSchd</targetReference>
        </connector>
        <fields>
            <name>CollectCustomGiftComitSchdDetailsScreenHeader</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 16px; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Manage Custom Gift Commitment Schedules&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>SetCustomGiftCmtInformationSection</name>
            <fieldText>Gift Commitment Information</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>SetCustomGiftCmtInformationSection_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>CustomGiftCommitmentNameText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Gift Commitment Name&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 12px;&quot;&gt;{!GetGiftCmtFromGiftCommitmentId.Name}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>SetCustomGiftCmtInformationSection_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>CustomExpectedTotalGiftCmtAmountDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Expected Total Commitment Amount&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 12px;&quot;&gt;{!GetGiftCmtFromGiftCommitmentId.ExpectedTotalCmtAmount}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>SetCustomGiftCmtInformationSection_Column3</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>CustomExpectedGiftCmtEndDateDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Expected End Date&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 12px;&quot;&gt;{!GetGiftCmtFromGiftCommitmentId.ExpectedEndDate}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <fields>
            <name>CreateCustomGiftCmtSchdLabelDisplayText</name>
            <fieldText>&lt;p&gt;&lt;em style=&quot;font-size: 13px;&quot;&gt;Create a custom Gift Commitment Schedule. One custom Gift Commitment Schedule creates one Gift Transaction with the transaction due date being same as the start date of the schedule.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>CustomMultiCurrencyInfoDisplayText</name>
            <fieldText>&lt;p&gt;&lt;em&gt;The currency of the transaction amount matches the currency in the associated Gift Commitment record.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>CustomGiftCmtScdInfoSection</name>
            <fieldText>Gift Commitment Schedule Information</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>CustomGiftCmtScdInfoSection_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>CustomGiftCommitmentScheduleComponent</name>
                    <dataTypeMappings>
                        <typeName>T</typeName>
                        <typeValue>GiftCommitmentSchedule</typeValue>
                    </dataTypeMappings>
                    <extensionName>runtime_industries_frops:customSchedule</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>giftCommitmentID</name>
                        <value>
                            <elementReference>giftCommitmentId</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>additionalFields</name>
                        <value>
                            <elementReference>CustomGiftCmtSchdFields</elementReference>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <nextOrFinishButtonLabel>Confirm And Save</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Allows the flow user to create a recurring gift commitment schedule when no active or paused gift commitment schedules were found for the gift commitment with giftCommitmentId.</description>
        <name>CollectRecurringGiftComitSchdDetailsScreen</name>
        <label>Collect Recurring Gift Commitment Schedule Details</label>
        <locationX>2202</locationX>
        <locationY>890</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SetRecurringGiftCmtScdValuesforGiftCmt</targetReference>
        </connector>
        <fields>
            <name>CollectRecurringGiftComitSchdDetailsScreenHeader</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-size: 16px;&quot;&gt;Create Recurring Gift Commitment Schedule&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>CreateRecurringGiftCmtSchdLabelDisplayText</name>
            <fieldText>&lt;p&gt;&lt;em style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Create a recurring Gift Commitment Schedule.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>RecurringMultiCurrencyInfoDisplayText</name>
            <fieldText>&lt;p&gt;&lt;em&gt;The currency of the transaction amount matches the currency in the associated Gift Commitment record.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>GiftCmtInformationSection</name>
            <fieldText>Gift Commitment Information</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>GiftCmtInformationSection_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>GiftCommitmentNameText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Gift Commitment Name&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;﻿&lt;/span&gt;&lt;strong style=&quot;font-size: 12px;&quot;&gt;{!GetGiftCmtFromGiftCommitmentId.Name}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>GiftCmtInformationSection_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>ExpectedTotalGiftCmtAmountDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Expected Total Commitment Amount&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;{!GetGiftCmtFromGiftCommitmentId.ExpectedTotalCmtAmount}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>GiftCmtInformationSection_Column3</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>ExpectedGiftCmtEndDateDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Expected End Date&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;{!GetGiftCmtFromGiftCommitmentId.ExpectedEndDate}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <fields>
            <name>SetRecurringGiftCmtScdInformationSection</name>
            <fieldText>Gift Commitment Schedule Information</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>SetRecurringGiftCmtScdInformationSection_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>StartDate</name>
                    <dataType>Date</dataType>
                    <defaultValue>
                        <elementReference>$Flow.CurrentDate</elementReference>
                    </defaultValue>
                    <fieldText>Start Date</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>GiftTransactionPeriodPicklist</name>
                    <choiceReferences>TransactionPeriodPicklistChoiceSet</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <stringValue>Monthly</stringValue>
                    </defaultValue>
                    <fieldText>Gift Transaction Period</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <helpText>&lt;p&gt;Select the period for which the Gift Commitment Schedule is run. You must select from one of these transaction periods: Daily, Monthly, Weekly, Yearly.&lt;/p&gt;</helpText>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>GiftTransactionAmount</name>
                    <dataType>Currency</dataType>
                    <fieldText>Gift Transaction Amount</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <scale>2</scale>
                    <validationRule>
                        <errorMessage>Enter an amount that&apos;s greater than 0.</errorMessage>
                        <formulaExpression>{!ValidateGiftTransactionAmountFormula}</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>SetRecurringGiftCmtScdInformationSection_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>EndDate</name>
                    <dataType>Date</dataType>
                    <fieldText>End Date</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <validationRule>
                        <errorMessage>Enter an EndDate that’s on or after the StartDate.</errorMessage>
                        <formulaExpression>{!ValidateEndDateFormula}</formulaExpression>
                    </validationRule>
                </fields>
                <fields>
                    <name>GiftTransactionInterval</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <numberValue>1.0</numberValue>
                    </defaultValue>
                    <fieldText>Gift Transaction Interval</fieldText>
                    <fieldType>InputField</fieldType>
                    <helpText>&lt;p&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;Enter the interval of running the Gift Commitment Schedule. The Gift Transaction period and interval define how the schedule is run. For example, if the Gift Transaction period is monthly and Gift Transaction interval is 3, the schedule runs every three months.&lt;/span&gt;&lt;/p&gt;</helpText>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                </fields>
                <fields>
                    <name>GiftTransactionDayPicklist</name>
                    <choiceReferences>TransactionDayPicklistChoiceSet</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <stringValue>1</stringValue>
                    </defaultValue>
                    <fieldText>Gift Transaction Day</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <helpText>&lt;p&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;Select the day of the month to create Gift Transaction in the future for a monthly transaction period. If you select the day as 29 or 30, the Gift Transaction will be created on the last day for months that don&apos;t have that many days. This field is applicable only when you select Monthly in Gift Transaction Period&lt;/span&gt;&lt;/p&gt;</helpText>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                </fields>
                <fields>
                    <name>CampaignLookup</name>
                    <extensionName>flowruntime:lookup</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>objectApiName</name>
                        <value>
                            <stringValue>GiftCommitmentSchedule</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>label</name>
                        <value>
                            <stringValue>Campaign</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>fieldApiName</name>
                        <value>
                            <stringValue>CampaignId</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>maxValues</name>
                        <value>
                            <numberValue>1.0</numberValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>recordId</name>
                        <value>
                            <elementReference>GetGiftCmtFromGiftCommitmentId.CampaignId</elementReference>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <fields>
            <name>FinDock</name>
            <fieldText>FinDock</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>FinDock_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <objectFieldReference>RecurringGiftCmtScheduleRequest.fdff__Payment_Method__c</objectFieldReference>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <objectFieldReference>RecurringGiftCmtScheduleRequest.fdff__Payment_Processor__c</objectFieldReference>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <objectFieldReference>RecurringGiftCmtScheduleRequest.fdff__Target__c</objectFieldReference>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>FinDock_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <objectFieldReference>RecurringGiftCmtScheduleRequest.fdff__Payment_Profile__c</objectFieldReference>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <objectFieldReference>RecurringGiftCmtScheduleRequest.fdff__Mandate__c</objectFieldReference>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <nextOrFinishButtonLabel>Confirm And Save</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Displays a message to the flow user when there’s an error managing the gift commitment schedules.</description>
        <name>DisplayErrorManageScheduleScreen</name>
        <label>Display Error</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>NoScheduleChangeErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;background-color: rgb(255, 255, 255); color: rgb(234, 0, 30);&quot;&gt;Looks like you didn’t add or edit any fields in the custom schedule. Specify the values and try again.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>unchangedCustomScheduleErrorCode</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InvalidRecordIdErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;color: rgb(234, 0, 30); background-color: rgb(255, 255, 255);&quot;&gt;The specified ID is neither a donor ID nor a Gift Commitment ID. Specify a valid ID and try again.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>InvalidRecordIdErrorCode</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InvalidCmtStatusErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;color: rgb(234, 0, 30); background-color: rgb(255, 255, 255);&quot;&gt;You can’t edit the schedule because the associated Gift Commitment has Lapsed, Failing, or Closed status.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>InvalidCmtErrorCode</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InvalidGiftCmtForDonorErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;background-color: rgb(255, 255, 255); color: rgb(234, 0, 30);&quot;&gt;We couldn’t process this request because the associated Gift Commitment has Lapsed, Failing, or Closed status and the schedule type is None or not set.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>donorHasNoCommitmentError</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>NoneSchdTypeSetErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;color: rgb(234, 0, 30); background-color: rgb(255, 255, 255);&quot;&gt;We couldn’t process this request because the schedule type on the associated Gift Commitment is either not set or is set to None.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>noneScheduleTypeErrorCode</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>OnlyPausedSchdErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;color: rgb(234, 0, 30); background-color: rgb(255, 255, 255);&quot;&gt;We couldn’t process this request because the Gift Commitment has only paused schedules. Resume at least one schedule and try again.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>isPausedGiftComitSchdError</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Close</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays a message to the flow user when the system couldn’t perform an action such as get gift commitment or gift commitment schedule records, roll back gift transaction, or create gift commitment schedule record.</description>
        <name>DisplayFaultErrorManageScheduleScreen</name>
        <label>Display Error</label>
        <locationX>2466</locationX>
        <locationY>1214</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ManageScheduleErrorDisplayText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Close</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Allows the flow user to select a gift commitment from the available list that is fetched by Get Commitments for a donor.</description>
        <name>SelectGiftCmtScreen</name>
        <label>Select Gift Commitment</label>
        <locationX>618</locationX>
        <locationY>566</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SetSelectedGiftCmtId</targetReference>
        </connector>
        <fields>
            <name>AvailableGiftCommitmentsSection</name>
            <fieldText>Available Gift Commitments</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>AvailableGiftCommitmentsSection_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>SelectGiftCommitmentSection</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;em style=&quot;font-size: 13px;&quot;&gt;Only Gift Commitments that are Active, Draft, or Paused are displayed.&lt;/em&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <fields>
                    <name>SelectGiftCommitmentDataTable</name>
                    <dataTypeMappings>
                        <typeName>T</typeName>
                        <typeValue>GiftCommitment</typeValue>
                    </dataTypeMappings>
                    <extensionName>flowruntime:datatable</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>label</name>
                        <value>
                            <stringValue>$Label.ManageGiftCommitmentScheduleFlow.commitmentSelectionDatatableHeader</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>selectionMode</name>
                        <value>
                            <stringValue>SINGLE_SELECT</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>minRowSelection</name>
                        <value>
                            <numberValue>1.0</numberValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>tableData</name>
                        <value>
                            <elementReference>GetGiftCommitments</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>columns</name>
                        <value>
                            <stringValue>[{&quot;apiName&quot;:&quot;Name&quot;,&quot;guid&quot;:&quot;column-a819&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;$Label.ManageGiftCommitmentScheduleFlow.commitmentName&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Name&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;Status&quot;,&quot;guid&quot;:&quot;column-2f1a&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;$Label.ManageGiftCommitmentScheduleFlow.commitmentStatus&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Status&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;ScheduleType&quot;,&quot;guid&quot;:&quot;column-117f&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;$Label.ManageGiftCommitmentScheduleFlow.commitmentScheduleType&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:2,&quot;label&quot;:&quot;Schedule Type&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;CreatedDate&quot;,&quot;guid&quot;:&quot;column-d88d&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;$Label.ManageGiftCommitmentScheduleFlow.commitmentDate&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:3,&quot;label&quot;:&quot;Created Date&quot;,&quot;type&quot;:&quot;customDateTime&quot;}]</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>maxRowSelection</name>
                        <value>
                            <numberValue>1.0</numberValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>shouldDisplayLabel</name>
                        <value>
                            <booleanValue>true</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>selectedRows</name>
                        <value>
                            <elementReference>GetGiftCommitments</elementReference>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <sourceTemplate>frops_flow__ManageGiftCmtSchedule</sourceTemplate>
    <start>
        <locationX>2858</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>WhatTypeOfId</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Update_Recurring_Gift_Commitment_Schedule_FinDock</name>
        <label>Update Recurring Gift Commitment Schedule</label>
        <locationX>1674</locationX>
        <locationY>890</locationY>
        <flowName>Update_Recurring_Gift_Commitment_Schedule_FinDock</flowName>
        <inputAssignments>
            <name>action</name>
            <value>
                <elementReference>UpgradeDowngradeAction</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>giftCommitmentId</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <description>Stores the custom field values that the flow user provides.</description>
        <name>CustomGiftCmtSchdFields</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores a Boolean value that indicates whether the flow was ended due to an error because donor is not having active, draft or paused status GiftCommitment and having recurring or custom schedule type.</description>
        <name>donorHasNoCommitmentError</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Variable errorMessage</description>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the count of records in GiftCommitments from GetGiftCommitments.</description>
        <name>gIftCommitmentCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores the ID of the gift commitment record by GetCommitments or selected GetCommitments recordId.</description>
        <name>giftCommitmentId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the validation error code used when the giftCommitmentId is an invalid gift commitment.</description>
        <name>InvalidCmtErrorCode</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the validation error code used when recordId isn&apos;t a donor record ID or a gift commitment record ID.</description>
        <name>InvalidRecordIdErrorCode</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the validation error code used when only paused gift commitment schedule records for a gift commitment ID matching giftCommitmentId were found.</description>
        <name>isPausedGiftComitSchdError</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the validation error code used when the schedule type on the gift commitment is None.</description>
        <name>noneScheduleTypeErrorCode</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the ID of a donor or gift commitment record that&apos;s passed into the flow.</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the recurring gift commitment schedule record request to process.</description>
        <name>RecurringGiftCmtScheduleRequest</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GiftCommitmentSchedule</objectType>
    </variables>
    <variables>
        <description>Stores the validation error code used when the flow user made no change to the custom gift commitment schedule.</description>
        <name>unchangedCustomScheduleErrorCode</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
</Flow>
